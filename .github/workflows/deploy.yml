name: Deploy to EKS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: test-ecr-repo
  CLUSTER_NAME: my-eks-cluster
  DEPLOYMENT_NAME: php-app-deployment
  CONTAINER_NAME: php-app-container

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::583524027548:role/GitHubOIDCRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set unique image tag with timestamp
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          IMAGE_TAG="latest-$TIMESTAMP"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name $CLUSTER_NAME

      - name: Set image in deployment
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
            ${{ env.CONTAINER_NAME }}=${{ env.IMAGE_URI }} --record
